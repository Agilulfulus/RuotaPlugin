R"RU0(
static os :: {
	system(x) => { _OUTER_CALL_("console.system", x)[0] };
	exit() => { _OUTER_CALL_("console.exit") };
	rawFile(filename) => { _OUTER_CALL_("console.raw_file", filename)[0] };
	milli() => { _OUTER_CALL_("console.milli")[0] };
};

# Returns a paired object array built from the contents of two equally sized arrays
pairs(a, b) => p from {
	len a != len b then return;
	p = [];
	i in [0 : len a] do {
		p push struct {
			first := a[i], 
			second := b[i]
		};
	};
};

static Math :: {
	floor(x) => { _OUTER_CALL_("console.floor", x)[0] };
	sqrt(x) => { x ** 0.5 };
	max(a, b) => { a > b then a else b };
	min(a, b) => { a < b then a else b };
	sum(a) => s from {
		s = 0;
		i in a do {
			s = s + i;
		};
	};
	prod(a) => p from {
		p = 1;
		i in a do {
			p = p * i;
		};
	};
	fact(x) => prod([1:>x]);
};

static Random :: {
	double() => { _OUTER_CALL_("console.random")[0] };
	int(min, max) => i from {
		max == null then {
			max = min;
			min = 0;
		};
		i = Math.floor(double() * (max - min) + min);
	};
};

)RU0"